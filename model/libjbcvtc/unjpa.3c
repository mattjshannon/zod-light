.TH unjpa 3C "07 September 1995" "Version 1.0" "IPAC Tools"
.SH NAME
unjpa, unjpap - J2000 to B1950 coordinate and position angle conversion subroutines
.SH SYNOPSIS
.B "unjpa (\|ra, dec, paj, tobs, ieflg,"
.br
.B "       eqx, raout, decout, pab, ierr)"
.br
.B "int ieflg, *ierr;"
.br
.B "double ra, dec, paj, tobs, eqx,"
.br
.B "       *raout, *decout, *pab;"
.br

.B  "unjpap (\|ra, dec, paj, pma, pmd, pin, vin, ieflg, eqx,"
.br
.B  "        raout, decout, pab, pmaout, pmdout, ierr)"
.br
.B  "int ieflg, *ierr;"
.br
.B  "double ra, dec, paj, pma, pmd, pin, vin, eqx,"
.br
.B  "       *raout, *deout, *pab, *pmaout, *pmdout;"

.PD 1
.SH DESCRIPTION
.BR unjpa " and " unjpap
do accurate astronomical conversion of J2000.0
system positions to the Besselian (e.g. B1950.) system where the
object's associated position angle is also to be converted.
The method used in these subroutines undoes the conversion done by 
gtjpa and gtjpap.
It is assumed that the systematic "FK5-FK4"
correction (excluding the portion of the correction that is a
function of magnitude) was applied in computing the J2000.0
position and such correction is to be removed now.
.PP
.B  unja
is a subroutine convert J2000.0  positions and position
angles to Besselian (Newcomb) type positions.
.B  unjpa
undoes what gtjpa does.
.B  unjpa
converts radio source positions and other positions, from catalogs,
for which no proper motion values are given.
.B  unjpa
returns the Besselian position and position angle in
.IR *raout ", " *decout " and"
.IR *pab "."
An error indicator is returned in
.IR *ierr "."
The calling program must specify values for
.IR ra ", " dec ","
.IR paj ", " tobs ","
.IR ieflg " and " eqx "."
.PP
.BR unjpap
is a subroutine to convert J2000.0 positions, proper motions
and position angles to Besselian (Newcomb) type positions.
.B  unjpap
undoes what gtjpap does.
.B  unjpap
returns the Besselian position, position angle, and proper motions in
.IR *raout ", " *decout ","
.IR pab ", " pmaout " and"
.IR pmdout "."
An error indicator is returned in
.IR ierr "."
The calling program must specify values for
.IR ra ", " dec ","
.IR paj ", " pma ","
.IR pmd ", " pin ","
.IR vin " , " ieflg " and"
.IR eqx "."
.PP
Important Note:
.BR unjpa " is not interchangeable with " unjpap "."
Please see gtjpa(3f) man page for more explanation.
.PP
All arguments are double precision except for
.IR ieflg " and " ierr ";"
all angles are decimal degrees unless noted otherwise:
.TP
.I  ra
is right ascension of the J2000.0 position,in decimal
degrees, to be converted (\|0.0  <=
.IR  ra "  <=  360.0\|)."
.TP
.I  dec
is declination of the J2000.0 position, in decimal degrees,
to be converted (\|\-90.0  <=
.IR dec "  <=  +90.0\|)."
.TP
.I  paj
is input position angle (degrees east of north) at
J2000.0  (\|0.0 <=
.IR pab "  < 360.0\|)."
.TP
.I  tobs
is year (Besselian based) of observation, if known 
(e.g. 1983.5). If unknown, use the value of 1950.0.
If 0.0,
.BR unjpa " uses the value of"
.IR eqx " for " tobs "."
.IR tobs " is used by "
.BR unjpa " only; not used in " unjpap "."
.TP
.I  ieflg
is integer flag allowing replacement of E-terms of
aberration:
.br
\01 = replace E-terms
.RI "(" ieflg " should usually = 1)."
.br
\-1 = do not replace E-terms.
.TP
.I  eqx
is the Besselian equinox of the output position
(e.g. 1950.0 for B1950).
.TP
.I  *raout
is output right ascension of position at
.I  eqx
(\|0.0  <=
.IR *raout "  <=  360.0 decimal degrees, returned)."
.TP
.I  *decout                   
is output declination of position at
.I  eqx
(\|\-90.0  <=
.IR *decout "  <=  +90.0 decimal degrees, returned)."
.TP
.I  *pab
is output position angle (degrees east of north) at
.IR eqx " if " ierr
is returned as 0 . (\|0.0  <=
.IR *pab "  < 360.0)."
.TP
.I  *ierr
is integer processing flag. 0 for normal return; 
\-1 if
.I  *pab
could not be computed (usually because too close to a pole).
.PP
.RS +5
The following additional arguments are for
.BR unjpap " only"
.TP
note:
.IR tobs " is not part of the"
.BR unjpap " argument list;"
.IR eqx " is usually 1950.0 for"
.BR unjpap ")"
.RE
.PP
.I  pma
is proper motion in ra in seconds of time per Julian
century at J2000.
.TP
.I  pmd
is proper motion in dec in seconds of arc per Julian
century at J2000.
.TP
.I  pin
is parallax in arc seconds (0.0 if unknown).
.TP
.I  vin
is radial velocity in km/sec (0.0 if unknown).
.TP
.I *pmaout
is proper motion in ra in seconds of time per tropical
century at
.IR eqx " (returned)."
.TP
.I  *pmdout
is proper motion in dec in seconds of arc per tropical
century at
.I  eqx " (returned)."

.SH NOTES
The following information is provided to help avoid user-subroutine
name conflicts:
.br
.BR unjpa " (and " unjpap "),"
which are included in the gtjpa.f file,
call the following subroutines:
unjul2 (and unjulp) and routines included in the gtjul2.f file:
gtecle, gtetrm, itere, iterec, jaddet, jclpos, jrmvet.
.br       
In addition, the following routines are also required:
ecleqx (with equecx, jgtobq), fk5prc (with fk5prp), nwcprc
(with nwcprp), jbposa (with jbelpt).

.SH USAGE NOTE
Re: Converting IRAS Faint Source Survey J2000 positions back to B1950
.PP
The FSS J2000 positions, produced May 1992, used a version of
the IPAC conversion routine that did not incorporate the FK5-FK4
systematic corrections.
To compute the original B1950 input from these
J2000 coordinates, the user must set a flag to indicate FK5-FK4
corrections are to be ignored.
In the calling program, include the 
following statements for this special case:

.br
            extern int japply;
.br
      c note - japply default value is 1; change value to 0 for FSS:
.br
            japply = 0

.fi
.RE
.SH C EXAMPLE
.RS -5
.nf
         C EXAMPLE FOR THE SUNS for unjpa

       #include <math.h>

       main()
       {
       /* To convert a J2000.0 position and position angle to B1950.0,  */
       /* where proper motions are not given.                           */
       /*     with tobs = 1950.0;  E-terms are to be replaced.          */

       double eqx;
       double ra;
       double dec;
       double paj;
       double tobs;
       int ieflg;
       double raout;
       double decout;
       double pab;
       int ierr;

       /*  Input RA is 00h05m27.0s - put into decimal degrees:         */

       ra = (0.0 + 5.0/60.0 + 27.0/3600.0) * 15.0;

       /*  Input DEC is +71d44m36.0s - put into decimal degrees:       */

       dec = + (71.0 + 44.0/60.0 + 36.0/3600.0);

       paj    = 90.0;
       tobs   = 1950.0;
       ieflg  = 1;
       eqx    = 1950.0;

       unjpa(ra, dec, paj, tobs, ieflg, eqx,
              &raout, &decout, &pab, &ierr);

       /*  raout & decout will contain decimal degrees for equinox eqx.*/
       /*  pab will contain decimal deg. position angle if ierr = 0 on */
       /*   return.  Also see comment in FORTRAN example.              */

       }
.fi
.RE
.SH FILES
.TP 20
libjbcvt.a
Coordinate conversion/precession library
.SH SEE ALSO
jcnvp2(3C), fk5prc(3C), nwcprc(3C), jbposa(3C), jbelpt(3C),
gtjpa(3C), gtjul2(3C), j2000(3C)
.SH IDENTIFICATION
Acknowledgement: 
.br
These two subroutines are translated from libjbcvt.a FORTRAN
library version 1.0, written by Judy Bennett. The description and C exmaple
come from unjpa(3F).
.br

Author:  Jing Li 
.br
Program date (latest version):  07 September 1995
